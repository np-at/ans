---
- name: Ensure jmespath installed
  ansible.builtin.pip:
    name: jmespath
    state: present

- name: Preflight
  ansible.builtin.include_tasks: preflight.yml
  tags:
    - prometheus_configure
    - prometheus_install
    - prometheus_run

- name: Ensure dir exists
  become: true
  ansible.builtin.file:
    path: "{{ config_path }}/prometheus"
    mode: 0777
    owner: "{{ puid }}"
    group: "{{ pgid }}"
    state: directory
- name: Ensure rules dir exists
  become: true
  ansible.builtin.file:
    path: "{{ config_path }}/prometheus/rules"
    mode: 0777
    owner: "{{ puid }}"
    group: "{{ pgid }}"
    state: directory
- name: Alerting rules file
  become: true
  ansible.builtin.template:
    src: "templates/alert.rules.j2"
    dest: "{{ config_path }}/prometheus/rules/ansible_managed.rules"
    # owner: root
    # group: prometheus
    mode: 0777
    # validate: "{{ _prometheus_binary_install_dir }}/promtool check rules %s"
  when:
    - prometheus_alert_rules != []

- name: Create config
  become: true
  ansible.builtin.template:
    src: templates/prometheus.yml.j2
    dest: "{{ config_path }}/prometheus/prometheus.yml"
    owner: "{{ puid }}"
    group: "{{ pgid }}"
    mode: 0777
    force: true
  notify:
    - RestartProm

- name: Fuck
  community.docker.docker_container:
    name: prometheus
    image: prom/prometheus:latest
    restart_policy: unless-stopped
    state: started
    cpus: 0.5
    pull: true
    network_mode: default
    mounts:
      - source: "{{ config_path }}/prometheus/prometheus.yml"
        target: "/etc/prometheus/prometheus.yml"
        type: bind
        read_only: true
      - source: "{{ config_path }}/prometheus/rules/ansible_managed.rules"
        target: "/etc/prometheus/rules/alert.rules"
        type: bind
        read_only: true
    ports:
      - 9090:9090
    networks:
      - name: "{{ network }}"
